package com.th.jbp.jpa.entity;

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

@Entity
@Table(name="JBP_INVENTORY_ITEM_ORDERS")
public class InventoryItemOrdersM implements Serializable{
	
	private static final long serialVersionUID = -2171961015177208592L;

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long inventoryItemOrdersId;
	
	@Column
	private String itemName;
	
	@Column
	private String itemDescription;
	
	@Column
	private String itemBrand;
	
	@Column
	private String itemModel;
	
	@Column
	private java.sql.Date itemDate;
	
	@Column
	private java.sql.Date itemExpiryDate;
	
	@Column
	private BigDecimal itemPrice;
	
	@Column
	private String itemStore;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "itemType", referencedColumnName = "inventoryItemTypeId", nullable = false)
	protected InventoryItemTypeM itemType;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status", referencedColumnName = "classifierValueId", nullable = false)
	protected ClassifierValueM status;
	
	@Column
	private String lotNumber;
	
	@Column
	private int quantity;
	
	@Column
	private byte[] image;
	
	@Column
	private byte[] image2;
	
	@Column
	private byte[] image3;
	
	@Column
	private Timestamp createDate;
	
	@Column
	private Timestamp updateDate;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "createBy", referencedColumnName = "userId", nullable = false)
	protected UserM createBy;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updateBy", referencedColumnName = "userId", nullable = true)
	protected UserM updateBy;
	
	public InventoryItemOrdersM(){
		
	}
	
	public InventoryItemOrdersM(InventoryItemM another){
		this.itemName = another.getItemName();
		this.itemDescription = another.getItemDescription();
		this.itemBrand = another.getItemBrand();
		this.itemModel = another.getItemModel();
		this.itemDate = another.getItemDate();
		this.itemExpiryDate = another.getItemExpiryDate();
		this.itemPrice = another.getItemPrice();
		this.itemStore = another.getItemStore();
		this.itemType = another.getItemType();
		this.status = another.getStatus();
		this.lotNumber = another.getLotNumber();
		this.image = another.getImage();
		this.image2 = another.getImage2();
		this.image3 = another.getImage3();
		this.createDate = another.getCreateDate();
		this.updateDate = another.getUpdateDate();
		this.createBy = another.getCreateBy();
		this.updateBy = another.getUpdateBy();
	}

	public Long getInventoryItemOrdersId() {
		return inventoryItemOrdersId;
	}

	public void setInventoryItemOrdersId(Long inventoryItemOrdersId) {
		this.inventoryItemOrdersId = inventoryItemOrdersId;
	}

	public String getItemName() {
		return itemName;
	}

	public void setItemName(String itemName) {
		this.itemName = itemName;
	}

	public String getItemDescription() {
		return itemDescription;
	}

	public void setItemDescription(String itemDescription) {
		this.itemDescription = itemDescription;
	}

	public String getItemBrand() {
		return itemBrand;
	}

	public void setItemBrand(String itemBrand) {
		this.itemBrand = itemBrand;
	}

	public String getItemModel() {
		return itemModel;
	}

	public void setItemModel(String itemModel) {
		this.itemModel = itemModel;
	}

	public java.sql.Date getItemDate() {
		return itemDate;
	}

	public void setItemDate(java.sql.Date itemDate) {
		this.itemDate = itemDate;
	}

	public java.sql.Date getItemExpiryDate() {
		return itemExpiryDate;
	}

	public void setItemExpiryDate(java.sql.Date itemExpiryDate) {
		this.itemExpiryDate = itemExpiryDate;
	}

	public BigDecimal getItemPrice() {
		return itemPrice;
	}

	public void setItemPrice(BigDecimal itemPrice) {
		this.itemPrice = itemPrice;
	}

	public String getItemStore() {
		return itemStore;
	}

	public void setItemStore(String itemStore) {
		this.itemStore = itemStore;
	}

	public InventoryItemTypeM getItemType() {
		return itemType;
	}

	public void setItemType(InventoryItemTypeM itemType) {
		this.itemType = itemType;
	}

	public ClassifierValueM getStatus() {
		return status;
	}

	public void setStatus(ClassifierValueM status) {
		this.status = status;
	}

	public String getLotNumber() {
		return lotNumber;
	}

	public void setLotNumber(String lotNumber) {
		this.lotNumber = lotNumber;
	}

	public int getQuantity() {
		return quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	public byte[] getImage() {
		return image;
	}

	public void setImage(byte[] image) {
		this.image = image;
	}

	public byte[] getImage2() {
		return image2;
	}

	public void setImage2(byte[] image2) {
		this.image2 = image2;
	}

	public byte[] getImage3() {
		return image3;
	}

	public void setImage3(byte[] image3) {
		this.image3 = image3;
	}

	public Timestamp getCreateDate() {
		return createDate;
	}

	public void setCreateDate(Timestamp createDate) {
		this.createDate = createDate;
	}

	public Timestamp getUpdateDate() {
		return updateDate;
	}

	public void setUpdateDate(Timestamp updateDate) {
		this.updateDate = updateDate;
	}

	public UserM getCreateBy() {
		return createBy;
	}

	public void setCreateBy(UserM createBy) {
		this.createBy = createBy;
	}

	public UserM getUpdateBy() {
		return updateBy;
	}

	public void setUpdateBy(UserM updateBy) {
		this.updateBy = updateBy;
	}

}
